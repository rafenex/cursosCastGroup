package br.com.castgroup.cursos.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.castgroup.cursos.dto.CursoDTO;
import br.com.castgroup.cursos.entities.Curso;
import br.com.castgroup.cursos.repository.CursoRepository;

@RestController
@RequestMapping("/api/cursos")
public class CursoController {
	
	@Autowired
	CursoRepository cursoRepository;
	
	@GetMapping(value="/listar")
	public ResponseEntity<List<CursoDTO>> listarCursos(){
		List<CursoDTO> response = new ArrayList<>();

		for(Curso curso : cursoRepository.findAll()) {
			CursoDTO cursoDto = new CursoDTO();
			cursoDto.setCategoria(curso.getCategoria().getCategoria());
			cursoDto.setDescricao(curso.getDescricao());
			cursoDto.setInicio(curso.getInicio());
			cursoDto.setQuantidade(curso.getQuantidadeAlunos());
			cursoDto.setTermino(curso.getFim());
			response.add(cursoDto);
		}
		return ResponseEntity.status(HttpStatus.OK).body(response);		
	}
	
	public ResponseEntity<?> findById(@PathVariable("id_curso") Integer id_curso){
		Optional<Curso> item = cursoRepository.findById(id_curso);
		if(item.isEmpty()) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Curso n√£o encontrado");
		} else {
			CursoDTO response = new CursoDTO();
			Curso curso = item.get();
			response.setCategoria(curso.getCategoria().getCategoria());
			response.setDescricao(curso.getDescricao());
			response.setInicio(curso.getInicio());
			response.setQuantidade(curso.getQuantidadeAlunos());
			response.setTermino(curso.getFim());
			return ResponseEntity.status(HttpStatus.OK).body(response);			
		}
	}

}
