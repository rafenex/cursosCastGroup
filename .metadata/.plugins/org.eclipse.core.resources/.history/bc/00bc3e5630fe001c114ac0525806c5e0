package br.com.castgroup.cursos.service;

import java.time.LocalDate;
import java.util.List;

import org.springframework.stereotype.Service;

import br.com.castgroup.cursos.entities.Curso;
import br.com.castgroup.cursos.form.FormCadastroCurso;
import br.com.castgroup.cursos.form.FormUpdateCurso;
import br.com.castgroup.cursos.repository.CursoRepository;

@Service
public class CursoService {

	private String message = null;

	public boolean isValid(FormCadastroCurso request, CursoRepository cursoRepository) {

		// Verifica se a Data de inicio Ã© antes de hoje
		if (request.getInicio().isBefore(LocalDate.now())) {
			message = "data menor que a de hoje";
			System.out.println(message);
			return false;
		}
		// Verifica se a Data de inicio depois do termino
		if (request.getInicio().isAfter(request.getTermino())) {
			message = "data de termino anterior a de inicio";
			System.out.println(message);
			return false;
		}
		// Verifica se existe algum curso dentro da data informada
		if (cursoRepository.contador(request.getInicio(), request.getTermino()) > 0) {
			message = "ja existe curso nessa data";
			System.out.println(message);
			return false;
		}

		message = "curso cadastrado com sucesso";
		System.out.println("curso cadastrado com sucesso");
		return true;
	}

	public String mensagem() {
		return message;

	}

	public boolean isValid(FormUpdateCurso request, CursoRepository cursoRepository, Curso curso) {

		List<Curso> cursosQueIniciamOndeJaExistem = cursoRepository.findByInicioBetween(request.getInicio(),
				request.getTermino());
		List<Curso> cursosQueTerminamOndeJaExistem = cursoRepository.findByTerminoBetween(request.getInicio(),
				request.getTermino());
		System.out.println(cursosQueIniciamOndeJaExistem.size());
		System.out.println(cursosQueTerminamOndeJaExistem.size());
		System.out.println(curso.getDescricao());

		for (Curso curso1 : cursosQueIniciamOndeJaExistem) {
			if ((curso1.getId_curso() == curso.getId_curso()) && cursosQueIniciamOndeJaExistem.size() <= 1) {
				return true;
			}
		}
		
		for (Curso curso1 : cursosQueTerminamOndeJaExistem) {
			if ((curso1.getId_curso() == curso.getId_curso()) && cursosQueTerminamOndeJaExistem.size() <= 1) {
				return true;
			}
		}
		
		
		if (request.getInicio().isBefore(LocalDate.now())) {
			message = "data menor que a de hoje";
			System.out.println(message);
			return false;
		}
		if (request.getInicio().isAfter(request.getTermino())) {
			message = "data de termino anterior a de inicio";
			System.out.println(message);
			return false;
		}

		if (cursoRepository.contador(request.getInicio(), request.getTermino()) > 0) {
			message = "ja existe curso nessa data";
			System.out.println(message);
			return false;
		}

		message = "curso cadastrado com sucesso";
		System.out.println("curso cadastrado com sucesso");
		return true;
	}

}
